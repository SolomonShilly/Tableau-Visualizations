<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1010.1014                               -->
<workbook original-version='18.1' source-build='2024.3.0 (20243.24.1010.1014)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='StateData' inline='true' name='federated.12mj94m1bgwfmg16natmq04zpzkn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='StateData' name='textscan.1fnykmq12wnnqc18ufiu81m1puln'>
            <connection class='textscan' directory='C:/Users/Solomon/PycharmProjects/StockRetriever' filename='StateData.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.1fnykmq12wnnqc18ufiu81m1puln' name='StateData.csv' table='[StateData#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='string' name='sample' ordinal='2' />
            <column datatype='integer' name='serial' ordinal='3' />
            <column datatype='real' name='cbserial' ordinal='4' />
            <column datatype='integer' name='hhwt' ordinal='5' />
            <column datatype='real' name='cluster' ordinal='6' />
            <column datatype='integer' name='strata' ordinal='7' />
            <column datatype='string' name='gq' ordinal='8' />
            <column datatype='integer' name='hhincome' ordinal='9' />
            <column datatype='integer' name='pernum' ordinal='10' />
            <column datatype='integer' name='perwt' ordinal='11' />
            <column datatype='string' name='rachsing' ordinal='12' />
            <column datatype='string' name='occ1990' ordinal='13' />
            <column datatype='string' name='pwstate2' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sample</remote-name>
            <remote-type>129</remote-type>
            <local-name>[sample]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>sample</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>serial</remote-name>
            <remote-type>20</remote-type>
            <local-name>[serial]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>serial</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cbserial</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cbserial]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>cbserial</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hhwt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hhwt]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>hhwt</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cluster</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cluster]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>cluster</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>strata</remote-name>
            <remote-type>20</remote-type>
            <local-name>[strata]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>strata</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gq</remote-name>
            <remote-type>129</remote-type>
            <local-name>[gq]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>gq</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hhincome</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hhincome]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>hhincome</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pernum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[pernum]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>pernum</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>perwt</remote-name>
            <remote-type>20</remote-type>
            <local-name>[perwt]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>perwt</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rachsing</remote-name>
            <remote-type>129</remote-type>
            <local-name>[rachsing]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>rachsing</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>occ1990</remote-name>
            <remote-type>129</remote-type>
            <local-name>[occ1990]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>occ1990</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pwstate2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pwstate2]</local-name>
            <parent-name>[StateData.csv]</parent-name>
            <remote-alias>pwstate2</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='StateData.csv' datatype='table' name='[__tableau_internal_object_id__].[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]' role='measure' type='quantitative' />
      <column caption='Cbserial' datatype='real' name='[cbserial]' role='measure' type='quantitative' />
      <column caption='Cluster' datatype='real' name='[cluster]' role='measure' type='quantitative' />
      <column caption='Gq' datatype='string' name='[gq]' role='dimension' type='nominal' />
      <column caption='Household income' datatype='integer' name='[hhincome]' role='measure' type='quantitative' />
      <column caption='Hhwt' datatype='integer' name='[hhwt]' role='measure' type='quantitative' />
      <column caption='Occupation' datatype='string' name='[occ1990]' role='dimension' type='nominal' />
      <column caption='Pernum' datatype='integer' name='[pernum]' role='measure' type='quantitative' />
      <column caption='Perwt' datatype='integer' name='[perwt]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[pwstate2]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Race' datatype='string' name='[rachsing]' role='dimension' type='nominal' />
      <column caption='Sample' datatype='string' name='[sample]' role='dimension' type='nominal' />
      <column caption='Serial' datatype='integer' name='[serial]' role='measure' type='quantitative' />
      <column caption='Strata' datatype='integer' name='[strata]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/Solomon/AppData/Local/Temp/TableauTemp/#TableauTemp_0q91i2u0vzn1ls15u6akx0oag2yh.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='05/24/2025 09:39:18 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>F1</remote-name>
              <remote-type>20</remote-type>
              <local-name>[F1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>F1</remote-alias>
              <ordinal>0</ordinal>
              <family>StateData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>7228183</approx-count>
              <contains-null>true</contains-null>
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>StateData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>sample</remote-name>
              <remote-type>129</remote-type>
              <local-name>[sample]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>sample</remote-alias>
              <ordinal>2</ordinal>
              <family>StateData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>serial</remote-name>
              <remote-type>20</remote-type>
              <local-name>[serial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>serial</remote-alias>
              <ordinal>3</ordinal>
              <family>StateData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3190439</approx-count>
              <contains-null>true</contains-null>
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cbserial</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cbserial]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cbserial</remote-alias>
              <ordinal>4</ordinal>
              <family>StateData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6193594</approx-count>
              <contains-null>true</contains-null>
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hhwt</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hhwt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hhwt</remote-alias>
              <ordinal>5</ordinal>
              <family>StateData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1915</approx-count>
              <contains-null>true</contains-null>
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cluster</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cluster]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cluster</remote-alias>
              <ordinal>6</ordinal>
              <family>StateData.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6193594</approx-count>
              <contains-null>true</contains-null>
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>strata</remote-name>
              <remote-type>20</remote-type>
              <local-name>[strata]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>strata</remote-alias>
              <ordinal>7</ordinal>
              <family>StateData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3731</approx-count>
              <contains-null>true</contains-null>
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gq</remote-name>
              <remote-type>129</remote-type>
              <local-name>[gq]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gq</remote-alias>
              <ordinal>8</ordinal>
              <family>StateData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hhincome</remote-name>
              <remote-type>20</remote-type>
              <local-name>[hhincome]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hhincome</remote-alias>
              <ordinal>9</ordinal>
              <family>StateData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>48375</approx-count>
              <contains-null>true</contains-null>
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pernum</remote-name>
              <remote-type>20</remote-type>
              <local-name>[pernum]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pernum</remote-alias>
              <ordinal>10</ordinal>
              <family>StateData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16</approx-count>
              <contains-null>true</contains-null>
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>perwt</remote-name>
              <remote-type>20</remote-type>
              <local-name>[perwt]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>perwt</remote-alias>
              <ordinal>11</ordinal>
              <family>StateData.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2005</approx-count>
              <contains-null>true</contains-null>
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>rachsing</remote-name>
              <remote-type>129</remote-type>
              <local-name>[rachsing]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>rachsing</remote-alias>
              <ordinal>12</ordinal>
              <family>StateData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>occ1990</remote-name>
              <remote-type>129</remote-type>
              <local-name>[occ1990]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>occ1990</remote-alias>
              <ordinal>13</ordinal>
              <family>StateData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>335</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>pwstate2</remote-name>
              <remote-type>129</remote-type>
              <local-name>[pwstate2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>pwstate2</remote-alias>
              <ordinal>14</ordinal>
              <family>StateData.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>52</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <object-id>[StateData.csv_281A43B87BAD479EA80E47D242C5BC15]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
        <filter class='categorical' column='[pwstate2]'>
          <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
            <groupfilter function='member' level='[pwstate2]' member='&quot;alabama&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;alaska&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;arizona&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;arkansas&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;california&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;canada&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;colorado&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;connecticut&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;delaware&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;district of columbia&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;florida&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;georgia&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;hawaii&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;idaho&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;illinois&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;indiana&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;iowa&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;kansas&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;kentucky&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;louisiana&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;maine&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;maryland&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;massachusetts&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;mexico&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;michigan&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;minnesota&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;mississippi&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;missouri&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;montana&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;nebraska&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;nevada&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;new hampshire&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;new jersey&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;new mexico&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;new york&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;north carolina&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;north dakota&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;ohio&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;oklahoma&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;oregon&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;pennsylvania&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;rhode island&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;south carolina&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;south dakota&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;tennessee&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;texas&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;utah&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;vermont&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;virginia&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;washington&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;west virginia&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;wisconsin&quot;' />
            <groupfilter function='member' level='[pwstate2]' member='&quot;wyoming&quot;' />
          </groupfilter>
        </filter>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='StateData.csv' id='StateData.csv_281A43B87BAD479EA80E47D242C5BC15'>
            <properties context=''>
              <relation connection='textscan.1fnykmq12wnnqc18ufiu81m1puln' name='StateData.csv' table='[StateData#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='string' name='sample' ordinal='2' />
                  <column datatype='integer' name='serial' ordinal='3' />
                  <column datatype='real' name='cbserial' ordinal='4' />
                  <column datatype='integer' name='hhwt' ordinal='5' />
                  <column datatype='real' name='cluster' ordinal='6' />
                  <column datatype='integer' name='strata' ordinal='7' />
                  <column datatype='string' name='gq' ordinal='8' />
                  <column datatype='integer' name='hhincome' ordinal='9' />
                  <column datatype='integer' name='pernum' ordinal='10' />
                  <column datatype='integer' name='perwt' ordinal='11' />
                  <column datatype='string' name='rachsing' ordinal='12' />
                  <column datatype='string' name='occ1990' ordinal='13' />
                  <column datatype='string' name='pwstate2' ordinal='14' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='HHICN_STATE'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold'>Average Household Income by State (2019 - 2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateData' name='federated.12mj94m1bgwfmg16natmq04zpzkn' />
          </datasources>
          <datasource-dependencies datasource='federated.12mj94m1bgwfmg16natmq04zpzkn'>
            <column-instance column='[hhincome]' derivation='Avg' name='[avg:hhincome:qk]' pivot='key' type='quantitative' />
            <column caption='Household income' datatype='integer' name='[hhincome]' role='measure' type='quantitative' />
            <column-instance column='[pwstate2]' derivation='None' name='[none:pwstate2:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[pwstate2]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alabama&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alaska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arizona&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arkansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;california&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;colorado&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;connecticut&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;delaware&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;district of columbia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;florida&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;georgia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;hawaii&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;idaho&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;illinois&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;indiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;iowa&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kentucky&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;louisiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maine&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maryland&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;massachusetts&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;michigan&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;minnesota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mississippi&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;missouri&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;montana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nebraska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nevada&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new hampshire&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new jersey&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new york&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;ohio&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oklahoma&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oregon&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;pennsylvania&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;rhode island&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;tennessee&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;texas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;utah&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;vermont&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;washington&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;west virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wisconsin&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wyoming&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' direction='DESC' using='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' />
          <slices>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-weight' value='normal' />
            <format attr='font-style' value='normal' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='#dfe7e8' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Tableau Bold' />
            <format attr='font-size' value='12' />
            <format attr='background-color' value='#f9e9e0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-style' value='normal' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='text-decoration' value='none' />
            <format attr='font-weight' value='normal' />
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-style' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{531B28C9-AF3E-4580-A033-FE7C7A4D2F26}' />
    </worksheet>
    <worksheet name='HHINC_ASIAN&amp;CS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold' fontsize='12'>Average Household Income of Asian/Pacific Islanders </run>
            <run>Æ&#10;</run>
            <run bold='true' fontname='Tableau Bold' fontsize='12'>working as Computer Systems Analysts and Computer Scientists </run>
            <run>Æ&#10;</run>
            <run bold='true' fontname='Tableau Bold' fontsize='12'>by state (2019 - 2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateData' name='federated.12mj94m1bgwfmg16natmq04zpzkn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12mj94m1bgwfmg16natmq04zpzkn'>
            <column-instance column='[hhincome]' derivation='Avg' name='[avg:hhincome:qk]' pivot='key' type='quantitative' />
            <column caption='Household income' datatype='integer' name='[hhincome]' role='measure' type='quantitative' />
            <column-instance column='[occ1990]' derivation='None' name='[none:occ1990:nk]' pivot='key' type='nominal' />
            <column-instance column='[pwstate2]' derivation='None' name='[none:pwstate2:nk]' pivot='key' type='nominal' />
            <column-instance column='[rachsing]' derivation='None' name='[none:rachsing:nk]' pivot='key' type='nominal' />
            <column caption='Occupation' datatype='string' name='[occ1990]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[pwstate2]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Race' datatype='string' name='[rachsing]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' included-values='in-range'>
            <min>86497.5</min>
            <max>806256.82758620684</max>
          </filter>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]'>
            <groupfilter expression='COUNT([occ1990]) &gt;= 20000' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;computer systems analysts and computer scientists&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alabama&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alaska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arizona&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arkansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;california&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;colorado&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;connecticut&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;delaware&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;district of columbia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;florida&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;georgia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;hawaii&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;idaho&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;illinois&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;indiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;iowa&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kentucky&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;louisiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maine&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maryland&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;massachusetts&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;michigan&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;minnesota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mississippi&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;missouri&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;montana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nebraska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nevada&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new hampshire&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new jersey&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new york&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;ohio&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oklahoma&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oregon&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;pennsylvania&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;rhode island&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;tennessee&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;texas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;utah&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;vermont&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;washington&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;west virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wisconsin&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wyoming&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' direction='DESC' using='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' />
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]'>
            <groupfilter function='member' level='[none:rachsing:nk]' member='&quot;asian/pacific islander&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]</column>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]</column>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]</column>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]' value='#f9e9e0' />
            <format attr='background-color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' value='#f0f7fa' />
            <format attr='background-color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='#fefaf1' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Tableau Bold' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='center' />
            <format attr='background-color' value='#fefaf1' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' value='bold' />
            <format attr='font-size' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' value='12' />
            <format attr='font-family' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' value='Tableau Semibold' />
            <format attr='font-family' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]' value='Tableau Semibold' />
            <format attr='font-size' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]' value='11' />
            <format attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]' value='#000000' />
            <format attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' value='#1b1b1b' />
            <format attr='font-size' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='12' />
            <format attr='font-family' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='Tableau Semibold' />
            <format attr='font-weight' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='bold' />
            <format attr='text-align' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='auto' />
            <format attr='wrap' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='auto' />
            <format attr='text-align' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' value='auto' />
            <format attr='text-orientation' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]' value='-90' />
            <format attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='font-weight' value='bold' />
            <format attr='font-family' value='Tableau Semibold' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk] / ([federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk] / [federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]))</rows>
        <cols />
      </table>
      <simple-id uuid='{DEB042A7-5C86-4F0C-A6EA-E43C91DECAC5}' />
    </worksheet>
    <worksheet name='HHINC_ASIAN&amp;CS_MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold' fontsize='14'>Average Household Income By State</run>
            <run>Æ&#10;</run>
            <run bold='true' fontname='Tableau Bold' fontsize='14'>of Asian/Pacific Islanders working as Computer System Analysts/Computer Scientists (2019 - 2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateData' name='federated.12mj94m1bgwfmg16natmq04zpzkn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12mj94m1bgwfmg16natmq04zpzkn'>
            <column-instance column='[hhincome]' derivation='Avg' name='[avg:hhincome:qk]' pivot='key' type='quantitative' />
            <column caption='Household income' datatype='integer' name='[hhincome]' role='measure' type='quantitative' />
            <column-instance column='[occ1990]' derivation='None' name='[none:occ1990:nk]' pivot='key' type='nominal' />
            <column-instance column='[pwstate2]' derivation='None' name='[none:pwstate2:nk]' pivot='key' type='nominal' />
            <column-instance column='[rachsing]' derivation='None' name='[none:rachsing:nk]' pivot='key' type='nominal' />
            <column caption='Occupation' datatype='string' name='[occ1990]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[pwstate2]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Race' datatype='string' name='[rachsing]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]'>
            <groupfilter expression='COUNT([occ1990]) &gt;= 20000' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;computer systems analysts and computer scientists&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alabama&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alaska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arizona&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arkansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;california&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;colorado&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;connecticut&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;delaware&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;district of columbia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;florida&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;georgia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;hawaii&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;idaho&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;illinois&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;indiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;iowa&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kentucky&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;louisiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maine&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maryland&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;massachusetts&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;michigan&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;minnesota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mississippi&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;missouri&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;montana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nebraska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nevada&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new hampshire&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new jersey&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new york&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;ohio&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oklahoma&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oregon&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;pennsylvania&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;rhode island&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;tennessee&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;texas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;utah&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;vermont&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;washington&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;west virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wisconsin&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wyoming&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' direction='DESC' using='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' />
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]'>
            <groupfilter function='member' level='[none:rachsing:nk]' member='&quot;asian/pacific islander&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]</column>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]</column>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-family' value='Times New Roman' />
            <format attr='text-format' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='#dfedeb' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='C1033%' />
            <format attr='font-family' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='Times New Roman' />
            <format attr='font-size' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='12' />
            <format attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' num-steps='3' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='normal' />
            <format attr='font-family' value='Times New Roman' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' />
              <color column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' />
              <geometry column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12mj94m1bgwfmg16natmq04zpzkn].[Latitude (generated)]</rows>
        <cols>[federated.12mj94m1bgwfmg16natmq04zpzkn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{780FB2B0-9657-4A3C-B8D8-1F1BFFB241EB}' />
    </worksheet>
    <worksheet name='HHINC_ASIAN&amp;CS_MAP_MEDIAN'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold' fontsize='14'>Median Household Income By State</run>
            <run>Æ&#10;</run>
            <run bold='true' fontname='Tableau Bold' fontsize='14'>of Asian/Pacific Islanders working as Computer System Analysts/Computer Scientists (2019 - 2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateData' name='federated.12mj94m1bgwfmg16natmq04zpzkn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12mj94m1bgwfmg16natmq04zpzkn'>
            <column-instance column='[hhincome]' derivation='Avg' name='[avg:hhincome:qk]' pivot='key' type='quantitative' />
            <column caption='Household income' datatype='integer' name='[hhincome]' role='measure' type='quantitative' />
            <column-instance column='[hhincome]' derivation='Median' name='[med:hhincome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[occ1990]' derivation='None' name='[none:occ1990:nk]' pivot='key' type='nominal' />
            <column-instance column='[pwstate2]' derivation='None' name='[none:pwstate2:nk]' pivot='key' type='nominal' />
            <column-instance column='[rachsing]' derivation='None' name='[none:rachsing:nk]' pivot='key' type='nominal' />
            <column caption='Occupation' datatype='string' name='[occ1990]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[pwstate2]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Race' datatype='string' name='[rachsing]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]'>
            <groupfilter expression='COUNT([occ1990]) &gt;= 20000' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;computer systems analysts and computer scientists&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alabama&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alaska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arizona&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arkansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;california&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;colorado&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;connecticut&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;delaware&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;district of columbia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;florida&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;georgia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;hawaii&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;idaho&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;illinois&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;indiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;iowa&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kentucky&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;louisiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maine&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maryland&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;massachusetts&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;michigan&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;minnesota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mississippi&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;missouri&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;montana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nebraska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nevada&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new hampshire&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new jersey&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new york&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;ohio&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oklahoma&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oregon&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;pennsylvania&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;rhode island&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;tennessee&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;texas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;utah&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;vermont&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;washington&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;west virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wisconsin&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wyoming&quot;' />
            </groupfilter>
          </filter>
          <computed-sort column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' direction='DESC' using='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' />
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]'>
            <groupfilter function='member' level='[none:rachsing:nk]' member='&quot;asian/pacific islander&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]</column>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]</column>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='font-family' value='Times New Roman' />
            <format attr='text-format' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='C1033%' />
            <format attr='text-format' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' value='C1033%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='#dfedeb' />
            <format attr='background-color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' value='#dfedeb' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='C1033%' />
            <format attr='font-family' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='Times New Roman' />
            <format attr='font-size' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='12' />
            <format attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' value='#000000' />
            <format attr='text-format' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' value='C1033%' />
            <format attr='font-family' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' value='Times New Roman' />
            <format attr='font-size' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' value='12' />
            <format attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' num-steps='3' palette='red_green_gold_diverging_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' num-steps='5' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='normal' />
            <format attr='font-family' value='Times New Roman' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' />
              <color column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' />
              <geometry column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12mj94m1bgwfmg16natmq04zpzkn].[Latitude (generated)]</rows>
        <cols>[federated.12mj94m1bgwfmg16natmq04zpzkn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{214713B8-F5C0-4845-B6A3-E03219035022}' />
    </worksheet>
    <worksheet name='HHINC_MAP'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Household Income Map (2019 - 2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateData' name='federated.12mj94m1bgwfmg16natmq04zpzkn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12mj94m1bgwfmg16natmq04zpzkn'>
            <column-instance column='[hhincome]' derivation='Avg' name='[avg:hhincome:qk]' pivot='key' type='quantitative' />
            <column caption='Household income' datatype='integer' name='[hhincome]' role='measure' type='quantitative' />
            <column-instance column='[pwstate2]' derivation='None' name='[none:pwstate2:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[pwstate2]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' included-values='in-range'>
            <min>181262.15495264434</min>
            <max>1097164.490210792</max>
          </filter>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alabama&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alaska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arizona&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arkansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;california&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;colorado&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;connecticut&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;delaware&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;district of columbia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;florida&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;georgia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;hawaii&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;idaho&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;illinois&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;indiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;iowa&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kentucky&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;louisiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maine&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maryland&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;massachusetts&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;michigan&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;minnesota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mississippi&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;missouri&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;montana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nebraska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nevada&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new hampshire&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new jersey&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new york&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;ohio&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oklahoma&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oregon&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;pennsylvania&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;rhode island&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;tennessee&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;texas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;utah&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;vermont&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;washington&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;west virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wisconsin&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]</column>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[Longitude (generated)]' field-type='quantitative' max='37108320.499566346' min='16383400.597083554' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[Latitude (generated)]' field-type='quantitative' max='12149831.617526064' min='1038177.3722553642' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='337000.0' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' max='1097164.490210792' min='181262.15495264434' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' />
              <color column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' />
              <geometry column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12mj94m1bgwfmg16natmq04zpzkn].[Latitude (generated)]</rows>
        <cols>[federated.12mj94m1bgwfmg16natmq04zpzkn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1D377300-BA47-407D-ACA8-FAC9ED8DF207}' />
    </worksheet>
    <worksheet name='HHINC_MAP_Median'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Median Household Income Map (2019 - 2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateData' name='federated.12mj94m1bgwfmg16natmq04zpzkn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12mj94m1bgwfmg16natmq04zpzkn'>
            <column-instance column='[hhincome]' derivation='Avg' name='[avg:hhincome:qk]' pivot='key' type='quantitative' />
            <column caption='Household income' datatype='integer' name='[hhincome]' role='measure' type='quantitative' />
            <column-instance column='[hhincome]' derivation='Median' name='[med:hhincome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pwstate2]' derivation='None' name='[none:pwstate2:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[pwstate2]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' included-values='in-range'>
            <min>181262.15495264434</min>
            <max>1097164.490210792</max>
          </filter>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alabama&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alaska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arizona&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arkansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;california&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;colorado&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;connecticut&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;delaware&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;district of columbia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;florida&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;georgia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;hawaii&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;idaho&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;illinois&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;indiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;iowa&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kentucky&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;louisiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maine&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maryland&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;massachusetts&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;michigan&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;minnesota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mississippi&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;missouri&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;montana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nebraska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nevada&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new hampshire&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new jersey&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new york&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;ohio&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oklahoma&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oregon&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;pennsylvania&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;rhode island&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;tennessee&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;texas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;utah&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;vermont&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;washington&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;west virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wisconsin&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]</column>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[Longitude (generated)]' field-type='quantitative' max='36575937.825945981' min='17676326.060202911' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[Latitude (generated)]' field-type='quantitative' max='11542998.09363254' min='1409981.7877104667' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='337000.0' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' max='1097164.490210792' min='181262.15495264434' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
            <encoding attr='color' center='110000.0' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' num-steps='6' palette='red_blue_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' />
              <color column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' />
              <geometry column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.12mj94m1bgwfmg16natmq04zpzkn].[Latitude (generated)]</rows>
        <cols>[federated.12mj94m1bgwfmg16natmq04zpzkn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{65810E42-2214-42FE-AB0A-63A62301E490}' />
    </worksheet>
    <worksheet name='HHINC_RACE&amp;OCC'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold'>Household Income by Race and Occupation in each State</run>
            <run bold='true'> (2019 - 2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateData' name='federated.12mj94m1bgwfmg16natmq04zpzkn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.12mj94m1bgwfmg16natmq04zpzkn'>
            <column-instance column='[hhincome]' derivation='Avg' name='[avg:hhincome:qk]' pivot='key' type='quantitative' />
            <column caption='Household income' datatype='integer' name='[hhincome]' role='measure' type='quantitative' />
            <column-instance column='[occ1990]' derivation='None' name='[none:occ1990:nk]' pivot='key' type='nominal' />
            <column-instance column='[pwstate2]' derivation='None' name='[none:pwstate2:nk]' pivot='key' type='nominal' />
            <column-instance column='[rachsing]' derivation='None' name='[none:rachsing:nk]' pivot='key' type='nominal' />
            <column caption='Occupation' datatype='string' name='[occ1990]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[pwstate2]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Race' datatype='string' name='[rachsing]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]'>
            <groupfilter expression='COUNT([occ1990]) &gt;= 20000' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;accountants and auditors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;actors, directors, producers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;actuaries&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;administrative support jobs, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;advertising and related sales jobs&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;aerospace engineer&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;agricultural and food scientists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;air traffic controllers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;aircraft mechanics&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;airplane pilots and navigators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;animal caretakers except on farms&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;announcers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;architects&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;archivists and curators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;art makers: painters, sculptors, craft-artists, and print-makers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;art/entertainment performers and related&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;assemblers of electrical equipment&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;athletes, sports instructors, and officials&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;atmospheric and space scientists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;auto body repairers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;automobile mechanics&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;baggage porters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;bakers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;bank tellers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;barbers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;bartenders&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;batch food makers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;bill and account collectors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;billing clerks and related financial records processing&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;biological scientists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;biological technicians&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;boilermakers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;bookbinders&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;bookkeepers and accounting and auditing clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;broadcast equipment operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;bus drivers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;bus, truck, and stationary engine mechanics&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;business and promotion agents&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;butchers and meat cutters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;buyers, wholesale and retail trade&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;cabinetmakers and bench carpenters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;carpenters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;cashiers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;cementing and gluing maching operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;chemical engineers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;chemical technicians&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;chemists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;chief executives and public administrators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;child care workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;civil engineers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;clergy and religious workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;clinical laboratory technologies and technicians&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;computer software developers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;computer systems analysts and computer scientists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;concrete and cement workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;construction inspectors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;construction laborers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;construction trades, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;cooks, variously defined&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;correspondence and order clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;crane, derrick, winch, and hoist operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;crossing guards and bridge tenders&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;customer service reps, investigators and adjusters, except insurance&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;dancers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;data entry keyers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;dental assistants&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;dental hygenists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;dental laboratory and medical appliance technicians&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;dentists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;designers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;dietitians and nutritionists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;dispatchers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;door-to-door sales, street sales, and news vendors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;drafters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;dressmakers and seamstresses&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;drillers of earth&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;drillers of oil wells&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;drywall installers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;economists, market researchers, and survey researchers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;editors and reporters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;electric power installers and repairers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;electrical engineer&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;electricians&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;elevator installers and repairers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;elevator operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;eligibility clerks for government programs; social welfare&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;engineering technicians, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;engravers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;explosives workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;extruding and forming machine operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;farm workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;farmers (owners and tenants)&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;file clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;financial managers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;financial services sales occupations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;fire fighting, prevention, and inspection&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;fishers, hunters, and kindred&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;foresters and conservation scientists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;freight, stock, and materials handlers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;funeral directors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;furnace, kiln, and oven operators, apart from food&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;furniture and wood finishers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;garage and service station related occupations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;garbage and recyclable material collectors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;gardeners and groundskeepers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;general office clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;geologists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;glaziers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;graders and sorters in manufacturing&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;graders and sorters of agricultural products&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;grinding, abrading, buffing, and polishing workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;guards, watchmen, doorkeepers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;guides&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;hairdressers and cosmetologists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;hand molders and shapers, except jewelers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;health aides, except nursing&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;health record tech specialists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;health technologists and technicians, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;heating, air conditioning, and refigeration mechanics&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;heavy equipment and farm equipment mechanics&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;helpers, constructions&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;helpers, surveyors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;hotel clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;housekeepers, maids, butlers, stewards, and lodging quarters cleaners&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;human resources and labor relations managers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;human resources clerks, except payroll and timekeeping&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;industrial engineers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;industrial machinery repairers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;inspectors and compliance officers, outside construction&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;inspectors of agricultural products&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;insulation workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;insurance adjusters, examiners, and investigators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;insurance sales occupations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;insurance underwriters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;interviewers, enumerators, and surveyors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;janitors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;kindergarten and earlier school teachers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;kitchen workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;laborers outside construction&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;lathe, milling, and turning machine operatives&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;laundry workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;lawyers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;legal assistants, paralegals, legal support, etc&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;librarians&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;library assistants&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;licensed practical nurses&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;locksmiths and safe repairers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;locomotive operators (engineers and firemen)&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;machine feeders and offbearers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;machine operators, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;machinery maintenance occupations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;machinists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;mail and paper handlers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;mail carriers for postal service&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;mail clerks, outside of post office&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;management analysts&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;management support occupations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;managers and administrators, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;managers and specialists in marketing, advertising, and public relations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;managers in education and related fields&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;managers of food-serving and lodging establishments&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;managers of medicine and health occupations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;managers of properties and real estate&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;managers of service organizations, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;masons, tilers, and carpet installers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;material recording, scheduling, production, planning, and expediting clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;mathematicians and mathematical scientists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;mechanical engineers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;mechanics and repairers, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;medical scientists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;messengers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;metallurgical and materials engineers, variously phrased&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;meter readers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;military&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;millwrights&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;miners&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;misc food prep workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;misc material moving occupations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;misc textile machine operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;mixing and blending machine operatives&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;molders, and casting machine operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;musician or composer&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;nail and tacking machine operators  (woodworking)&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;not-elsewhere-classified engineers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;nursing aides, orderlies, and attendants&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;occupational therapists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;office machine operators, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;office supervisors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;operating engineers of construction equipment&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;operations and systems researchers and analysts&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;optical goods workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;optometrists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;other financial specialists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;other health and therapy&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;other law enforcement: sheriffs, bailiffs, correctional institution officers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;other mining occupations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;other plant and system operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;other woodworking machine operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;packers and packagers by hand&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;packers, fillers, and wrappers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;painters, construction and maintenance&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;painting machine operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;paper folding machine operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;parking lot attendants&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;payroll and timekeeping clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;personal service occupations, nec&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;personnel, hr, training, and labor relations specialists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;pest control occupations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;petroleum, mining, and geological engineers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;pharmacists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;photographers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;photographic process workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;physical scientists, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;physical therapists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;physicians&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;physicians&apos; assistants&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;physicists and astronomers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;plant and system operators, stationary engineers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;plasterers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;plumbers, pipe fitters, and steamfitters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;podiatrists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;police, detectives, and private investigators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;postal clerks, excluding mail carriers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;power plant operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;precision makers, repairers, and smiths&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;pressing machine operators (clothing)&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;primary school teachers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;production helpers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;production supervisors or foremen&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;programmers of numerically controlled machine tools&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;proofreaders&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;protective services, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;psychologists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;public transportation attendants and inspectors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;punching and stamping press operatives&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;purchasing agents and buyers, of farm products&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;purchasing managers, agents and buyers, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;radiologic tech specialists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;railroad conductors and yardmasters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;real estate sales occupations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;receptionists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;records clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;recreation facility attendants&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;recreation workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;registered nurses&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;repairers of data processing equipment&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;repairers of electrical equipment, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;repairers of household appliances and power tools&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;repairers of industrial electrical equipment&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;repairers of mechanical controls and valves&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;respiratory therapists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;retail sales clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;roasting and baking machine operators (food)&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;roofers and slaters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;sales demonstrators / promoters / models&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;sales engineers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;salespersons, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;sawing machine operators and sawyers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;secondary school teachers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;secretaries&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;separating, filtering, and clarifying machine operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;sheet metal duct installers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;ship crews and marine engineers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;shipping and receiving clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;shoe repairers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;slicing and cutting machine operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;small engine repairers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;social scientists, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;social workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;special education teachers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;speech therapists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;statistical clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;stock and inventory clerks&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;structural metal workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;subject instructors (hs/college)&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;supervisors and proprietors of sales jobs&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;supervisors of agricultural occupations&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;supervisors of cleaning and building service&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;supervisors of construction work&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;supervisors of guards&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;supervisors of mechanics and repairers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;supervisors of motor vehicle transportation&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;supervisors of personal service jobs, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;surveyors, cartographers, mapping scientists and technicians&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;taxi cab drivers and chauffeurs&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;teachers , n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;technical writers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;telecom and line installers and repairers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;telephone operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;textile sewing machine operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;therapists, n.e.c&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;timber, logging, and forestry workers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;tool and die makers and die setters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;transportation ticket and reservation agents&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;truck, delivery, and tractor drivers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;typesetters and compositors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;typists&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;upholsterers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;urban and regional planners&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;ushers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;vehicle washers and equipment cleaners&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;veterinarians&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;vocational and educational counselors&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;waiter&apos;s assistant&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;waiter/waitress&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;water and sewage treatment plant operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;weighers, measurers, and checkers&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;welders and metal cutters&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;welfare service aides&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;winding and twisting textile/apparel operatives&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;wood lathe, routing, and planing machine operators&quot;' />
                <groupfilter function='member' level='[none:occ1990:nk]' member='&quot;writers and authors&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alabama&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alaska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arizona&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arkansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;california&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;colorado&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;connecticut&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;delaware&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;district of columbia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;florida&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;georgia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;hawaii&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;idaho&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;illinois&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;indiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;iowa&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kentucky&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;louisiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maine&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maryland&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;massachusetts&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;michigan&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;minnesota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mississippi&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;missouri&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;montana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nebraska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nevada&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new hampshire&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new jersey&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new york&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;ohio&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oklahoma&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oregon&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;pennsylvania&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;rhode island&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;tennessee&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;texas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;utah&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;vermont&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;washington&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;west virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wisconsin&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wyoming&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:rachsing:nk]' member='&quot;american indian/alaska native&quot;' />
              <groupfilter function='member' level='[none:rachsing:nk]' member='&quot;asian/pacific islander&quot;' />
              <groupfilter function='member' level='[none:rachsing:nk]' member='&quot;black/african american&quot;' />
              <groupfilter function='member' level='[none:rachsing:nk]' member='&quot;hispanic/latino&quot;' />
              <groupfilter function='member' level='[none:rachsing:nk]' member='&quot;white&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]</column>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]</column>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='#f3faf9' />
            <format attr='background-color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]' value='#f3faf9' />
            <format attr='background-color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' value='#f3faf9' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-family' value='Tableau Bold' />
            <format attr='font-weight' value='normal' />
            <format attr='font-size' value='8' />
            <format attr='background-color' value='#f3ebf3' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='bold' />
            <format attr='font-style' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='normal' />
            <format attr='font-family' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='Tableau Bold' />
            <format attr='font-family' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]' value='Tableau Medium' />
            <format attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk]' value='#000000' />
            <format attr='font-family' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' value='Tableau Medium' />
            <format attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='8' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='normal' />
            <format attr='font-family' value='Trebuchet MS' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12mj94m1bgwfmg16natmq04zpzkn].[none:rachsing:nk] / [federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk])</rows>
        <cols>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]</cols>
      </table>
      <simple-id uuid='{291E2F86-C9C3-4B27-9FAB-821168C25B9F}' />
    </worksheet>
    <worksheet name='MEDIAN_HHICN'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold'>Median Household Income by State (2019 - 2023)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='StateData' name='federated.12mj94m1bgwfmg16natmq04zpzkn' />
          </datasources>
          <datasource-dependencies datasource='federated.12mj94m1bgwfmg16natmq04zpzkn'>
            <column caption='Household income' datatype='integer' name='[hhincome]' role='measure' type='quantitative' />
            <column-instance column='[hhincome]' derivation='Median' name='[med:hhincome:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pwstate2]' derivation='None' name='[none:pwstate2:nk]' pivot='key' type='nominal' />
            <column caption='State' datatype='string' name='[pwstate2]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alabama&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;alaska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arizona&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;arkansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;california&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;colorado&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;connecticut&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;delaware&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;district of columbia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;florida&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;georgia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;hawaii&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;idaho&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;illinois&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;indiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;iowa&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kansas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;kentucky&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;louisiana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maine&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;maryland&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;massachusetts&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;michigan&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;minnesota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;mississippi&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;missouri&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;montana&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nebraska&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;nevada&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new hampshire&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new jersey&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new mexico&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;new york&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;north dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;ohio&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oklahoma&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;oregon&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;pennsylvania&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;rhode island&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south carolina&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;south dakota&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;tennessee&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;texas&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;utah&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;vermont&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;washington&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;west virginia&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wisconsin&quot;' />
              <groupfilter function='member' level='[none:pwstate2:nk]' member='&quot;wyoming&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
            <format attr='background-color' value='#00000000' />
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='12' />
            <format attr='color' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='#3d3d3d' />
            <format attr='font-style' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='italic' />
            <format attr='text-decoration' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='none' />
            <format attr='font-weight' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='normal' />
            <format attr='font-family' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]' value='Verdana' />
            <format attr='font-weight' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' value='bold' />
            <format attr='font-size' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' value='14' />
            <format attr='text-format' field='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' value='c&quot;$&quot;#,##0,K' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]</rows>
        <cols>[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:pwstate2:nk]</cols>
      </table>
      <simple-id uuid='{79E297AF-D8CB-40DD-8F22-E07B2EE369C1}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='HHINC_MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{26C124E7-D2F6-434E-B750-36D51AFAFF9E}' />
    </window>
    <window class='worksheet' name='HHINC_MAP_Median'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{66752415-DDC5-42BF-9846-2C41C1543101}' />
    </window>
    <window class='worksheet' name='HHINC_RACE&amp;OCC'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{54A14B1B-F151-43DF-B52E-74E5BD49B80D}' />
    </window>
    <window class='worksheet' name='HHINC_ASIAN&amp;CS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0884E2FB-9E5C-4C4D-82E4-4BAA1DA593F2}' />
    </window>
    <window class='worksheet' name='HHINC_ASIAN&amp;CS_MAP'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mj94m1bgwfmg16natmq04zpzkn].[avg:hhincome:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E811A25-6259-4B79-ABA3-4CBF4637D0E5}' />
    </window>
    <window class='worksheet' name='HHINC_ASIAN&amp;CS_MAP_MEDIAN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.12mj94m1bgwfmg16natmq04zpzkn].[none:occ1990:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12mj94m1bgwfmg16natmq04zpzkn].[med:hhincome:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F18662B-8496-49C7-8771-F453B312559A}' />
    </window>
    <window class='worksheet' name='MEDIAN_HHICN'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{48E67283-B788-49B3-8B72-17DF33396C49}' />
    </window>
    <window class='worksheet' name='HHICN_STATE'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{43A5E822-1252-473D-A12F-5D9BE9D77390}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='HHICN_STATE' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HHINC_ASIAN&amp;CS' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nOydd1SUx9rAf7v0XqQ3aWIFFQV7wYIidrFEYxfBHmOJvadoookx0Wg0lhS9
      tkSNJWLsvXcRxEKvy8LuArvs7nx/eLMJ19xc80WjRn7nvOdw3vLM8O48M/POPEUihBBUUslr
      iEQikUhfdCUqqeRFUqkAlbzWVCpAJa81lQpQye9SVlb2oqvwt1CpAJX8Ljk5OS+6Cn8LlQpQ
      yWtNpQJU8lpTqQCVvNZUKkAlrzWVClDJa02lAlTyWlOpAJW81lQqQCWvNZUKUMlrTaUCVPJa
      Y/yfJ9RqNUVFRS+iLpW8RJSWlpKbm/uiq/HceUIBjI2Nsba2fmoBGp0ejU7/1PeblBYh1Wme
      +n5jG2uodFv421EY8afawavKEwpgZGSEpaXlUwuQanVItE+vAKb6Eoz+xP3G5mZIpJUK8Hdj
      ZPzn2sGrSmXLquS15h+kABoeXrvEyWsp6PQV3ZxL5JmcPnKc5NySP5SgVhVw4eQxknJUz7Oi
      lbxEPDEFenUpYvOsSXxh1ILb/5qPlZnEcCXr9kGGRL9D929OsKRn0H+VUJh6iXH936DJ0tN8
      3Lv631HpfwRCCNLT09myZQspKSl4enrSt29fqlWrBoBcLmfLli1cu3YNDw8PBgwYgL+/PxKJ
      BJ1Ox6VLl9i5cycqlYrevXvTvHlzpL+Z9ur1evLy8ti6dSt37tzB1NSU6OhoWrdujbGxMYcP
      H2bbtm38Nr5Dr169CA0NZeHChU849/j7+/PWW28B/6gRoJIXRWZmJqNGjSIhIQFfX18uX77M
      0KFDefDgAQqFgjlz5vDFF1/g7u7OqVOnGDx4MDk5Oej1eg4cOMDAgQPJz8/H2dmZM2fOoNPp
      KsjPy8sjNjaWn376CQ8PDxQKBaNHj+b48eNotVrOnDnDiRMncHJyIiAggICAABwcHDA2Nsbf
      399wzsjIiP3795OdnW1QsFduBFArctj79Ure/WwnhUYOtO05iNlvD8Lb7rd36Ti/5X0Gzd7P
      gp17CP3tJa2KI1vW8sEXW7iTUYS9e3WGTZvNuC71H18XgtQrCYz/fip7Lz6iYa8JfDZ3IFWM
      yrmcsIU5763iTraWak078N78qdT3dSD1p09oGf8jA0Y04+LevTwscSB+yhg0F3exad85PJsO
      ZOWHEwhyNGX/hvksW3uIe9lFWHvUZNKCRQyIqInpK9wV3bp1i4yMDGbOnEmvXr04fvw448eP
      58KFC7i5uXHy5ElGjBjB6NGjOXPmDCNHjuSHH36gS5cufPHFF7Rq1YolS5Zga2tLWVkZxsYV
      m6WpqSnx8fE0a9YMGxsbUlJSOH/+PGfOnCE8PJz09HR8fHwYP348rq6uFZ6dMGECABqNhvff
      fx8HBwdiYmIwMTEBXrkRQMeZLcsYOWcLbUbPZl58JOfWv8ec1Qcp0/46/JVl32T5qh3YNulF
      dG17JL8VUV7EtcR8Og6fxMrli2jpksus8e+TXPbvlSkhyEjNpnHPYQxr7cG2Fas5n6kk+8Y+
      RgyfhXHoGyxeOB6zuzuJm/E5mcXlaMsUZGSmkKt3J27iRHy0N1j+0QbM63dh5pDWHNu6gf3X
      M9Hrtdy+m063uMl8unwR4VYPmb/gIxJzX23/W39/f1xcXDh9+jSPHj3i1KlTWFlZUatWLR49
      eoRWq6Vu3bpIpVL8/PxwcXEhKSmJ1NRU0tPTAZg9ezbjxo0jOzv7Cfn29vZERUVha2uLXC5n
      69atqFQqgoKC0Gq1ZGdnk5aWxltvvcXYsWM5fPgwarW6goyMjAwOHDhAo0aNCA4ONpx/tRRA
      nc62rw9i1DCGhWP7MChuDPEda7B9+w6yFb/+wz9vWcWpXBfmzRyCpVRSUYaFB3ETR+Cpz+Hs
      xZuUSc0pyUzkQcG/FUAqpUm3gfSP6UaP9g1BU0ShsozTP2zmurY2c+aNps8bA/lgYi+u7N3D
      6Yf5/xbsSczgPvSIiqSGtz3OVevTp09PBnZvg0SfQ3qWCiNjM+InzcRRk8XFi9coN7YkKzuN
      nMJX+6M7ICCAmJgYdu7cSfPmzVm9ejXR0dHUqVMHjUaDVCrF0tISiUSCiYkJFhYWlJeXI5fL
      UalU5OXl4evri5GREW+99RYKhaKCfInk8W9469Ytxo4dy7p164iJiaFTp06YmZnRr18/4uLi
      CAsLIzc3l9jYWHbt2mX4JtDr9ezdu5esrCz69euHjY2NQfarNQXSlFJYUo59VUfMAYzNcXKy
      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
      LX3Nu/BZgFgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='HHINC_ASIAN&amp;CS_MAP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HHINC_ASIAN&amp;CS_MAP_MEDIAN' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HHINC_MAP' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='HHINC_MAP_Median' width='192'>
      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
      /6Q47LF5wCC/AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='HHINC_RACE&amp;OCC' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='MEDIAN_HHICN' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
